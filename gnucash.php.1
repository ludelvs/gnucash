<?php

/* ドライバ呼び出しを使用して ODBC データベースに接続する */
$dsn = 'sqlite:/home/lude/php/gnucash/gnucash.gnucash';

try {
      $dbh = new PDO($dsn);
      $dbh->setAttribute( PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION );
} catch (PDOException $e) {
      echo 'Connection failed: ' . $e->getMessage();
}


$sql = 'SELECT * FROM accounts WHERE account_type = :account_type';
$stmt = $dbh->prepare($sql);
$stmt->execute(array(':account_type' => 'ROOT'));
$res = $stmt->fetch(PDO::FETCH_ASSOC);
$rootGuid = $res['guid'];

$sql = 'SELECT * FROM accounts WHERE parent_guid = :guid AND account_type = :account_type';
$stmt = $dbh->prepare($sql);
$stmt->execute(array(':guid' => $rootGuid, ':account_type' => 'ASSET'));
$res = $stmt->fetchAll(PDO::FETCH_ASSOC);

function getChild($dbh, $res, &$list) {
  foreach ($res as $val) {
    $guid = $val['guid'];
    $sql = 'SELECT * FROM accounts WHERE parent_guid = :guid';
    $stmt = $dbh->prepare($sql);
    $stmt->execute(array(':guid' => $guid));
    $res2 = $stmt->fetchAll(PDO::FETCH_ASSOC);
    if ($res2) {
      getChild($dbh, $res2, $list);
    } else {
      $list[] = $val;
    }
  }
}

function getChildTotal($dbh, $res, $startDate, $endDate) {
  getChild($dbh, $res, $childList);
  $startDate .= '150000';
  $endDate .= '150000';

  foreach ($childList as $val) {
    $guid = $val['guid'];
    $sql = 'SELECT SUM(value_num) AS total '
         . 'FROM splits AS s '
         . 'INNER JOIN transactions AS t '
         . 'ON s.tx_guid = t.guid '
         . 'WHERE account_guid = :guid '
         . 'AND t.post_date between :start_date and :end_date ';
//    $sql = 'SELECT sum(value_num) as total FROM splits WHERE account_guid = :guid';
    $stmt = $dbh->prepare($sql);
    $stmt->execute(array(':guid' => $guid, ':start_date' => $startDate, ':end_date' => $endDate));
    $res2 = $stmt->fetch(PDO::FETCH_ASSOC);
    if ($res2) {
      $total += $res2['total'];
    }
  }
  return $total;
}
//getChild($dbh, $res, $childList);
$startDate = '20091201';
$monthStartDate = '20091201';
$startStr = strtotime($startDate);
$endDate = date('Ymt', $startStr);
while (true) {
  //$total = getChildTotal($dbh, $res, $startDate, $endDate);
  $total = getChildTotal($dbh, $res, $monthStartDate, $endDate);
  //print 'start:' . $startDate . ' end:' . $endDate . ' total:' . $total . "\n";
  print 'start:' . $monthStartDate . ' end:' . $endDate . ' total:' . $total . "\n";
  if ($monthStartDate == date('Ym01', time())) {
    break;
  }
  $startStr = strtotime($monthStartDate . '+1 month');
  $monthStartDate = date('Ym01', $startStr);
  $endDate = date('Ymt', $startStr);
}
exit;
$total = getChildTotal($dbh, $res, $startDate, $endDate);
print $total;exit;
if (!$res) {
  $sql = 'INSERT INTO monthly_traffics VALUES (:date, :traffic)';
  $stmt = $dbh->prepare($sql);
  $stmt->execute(array(':date'=> $formatSiteHtmlDate, ':traffic' => $monthlyTraffic));
} else {
  $sql = 'UPDATE monthly_traffics SET traffic =  :traffic WHERE month = :date';
  $stmt = $dbh->prepare($sql);
  $stmt->execute(array(':date'=> $formatSiteHtmlDate, ':traffic' => $monthlyTraffic));
}

$sql = 'SELECT date, traffic FROM daily_traffics ORDER BY date DESC LIMIT 2';
$stmt = $dbh->prepare($sql);
$stmt->execute();
$res = $stmt->fetchAll(PDO::FETCH_ASSOC);
foreach ($res as $val) {
  $lastTwoDaysTraffic += $val['traffic'];
}
$twoDaysAgoTraffic = $res[0]['traffic'];
$ThreeDaysAgoTraffic = $res[1]['traffic'];

$yesterdayTraffic = $threeDaysTraffic - $lastTwoDaysTraffic;

$sql = 'INSERT INTO daily_traffics VALUES (:date, :traffic)';
$stmt = $dbh->prepare($sql);
$stmt->execute(array(':date'=> $yesterday, ':traffic' => $yesterdayTraffic));






require 'PHPMailer/PHPMailerAutoload.php';

$mail = new PHPMailer;

$mail->isSMTP();                                      // Set mailer to use SMTP
$mail->Host = 'localhost';  // Specify main and backup SMTP servers
$mail->SMTPAuth = false;                               // Enable SMTP authentication
//$mail->SMTPAuth = true;                               // Enable SMTP authentication
//$mail->Username = 'lude@cnct.biz';                 // SMTP username
//$mail->Password = 'edagma2820';                           // SMTP password
//$mail->SMTPSecure = 'tls';                            // Enable encryption, 'ssl' also accepted

$mail->From = 'lude@cnct.biz';
$mail->FromName = 'U-mobile Report';
$mail->addAddress('vgns92ps@gmail.com');     // Add a recipient
//$mail->addAddress('ellen@example.com');               // Name is optional
$mail->addReplyTo('lude@cnct.biz', 'Information');
//$mail->addCC('cc@example.com');
//$mail->addBCC('bcc@example.com');

//$mail->WordWrap = 50;                                 // Set word wrap to 50 characters
//$mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments
//$mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name
$limitTraffic = 366 - ($twoDaysAgoTraffic + $yesterdayTraffic);
$contents = 'This month(' . $siteHtmlDate . ') total use traffic: ' . $monthlyTraffic . 'MB<br />';
$contents .= 'Last 3days traffic: ' . $threeDaysTraffic . '(' . $ThreeDaysAgoTraffic . ', ' . $twoDaysAgoTraffic . ', ' .$yesterdayTraffic . ')<br />';
$contents .= 'Today\'s 366MB use limit: ' . $limitTraffic . 'MB';
$mail->isHTML(true);                                  // Set email format to HTML
$mail->Subject = 'U-mobile traffic report';
$mail->Body  = $contents;
$mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

$html = '<html><head></head><body><div id="date"></div>' . date('Y-m-d') . '<div>' . $contents . '</div></body></html>';
file_put_contents('/var/www/umobile/index.html', $html);

if(!$mail->send()) {
    echo 'Message could not be sent.';
    echo 'Mailer Error: ' . $mail->ErrorInfo;
} else {
    echo 'Message has been sent';
}
